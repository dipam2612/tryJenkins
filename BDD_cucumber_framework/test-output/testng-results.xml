<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="16" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="49209" started-at="2022-05-31T13:16:27 IST" finished-at="2022-05-31T13:17:16 IST">
    <groups>
    </groups>
    <test name="testing testNG" duration-ms="49209" started-at="2022-05-31T13:16:27 IST" finished-at="2022-05-31T13:17:16 IST">
      <class name="testNG.ActiTimeV">
        <test-method status="PASS" signature="f()[pri:0, instance:testNG.ActiTimeV@51931956]" name="f" duration-ms="15271" started-at="2022-05-31T13:16:34 IST" finished-at="2022-05-31T13:16:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- testNG.ActiTimeV -->
      <class name="testNG.ActiTimeLogin">
        <test-method status="PASS" signature="m()[pri:0, instance:testNG.ActiTimeLogin@6279cee3]" name="m" duration-ms="26244" started-at="2022-05-31T13:16:50 IST" finished-at="2022-05-31T13:17:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m -->
      </class> <!-- testNG.ActiTimeLogin -->
      <class name="testNG.Para04">
        <test-method status="PASS" signature="signIn()[pri:0, instance:testNG.Para04@18a70f16]" name="signIn" duration-ms="8" started-at="2022-05-31T13:16:49 IST" finished-at="2022-05-31T13:16:49 IST">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at testNG.Para04.signIn(Para04.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signIn -->
        <test-method status="PASS" signature="checkNotification()[pri:0, instance:testNG.Para04@18a70f16]" name="checkNotification" duration-ms="0" started-at="2022-05-31T13:16:49 IST" depends-on-methods="testNG.Para04.login" finished-at="2022-05-31T13:16:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNotification -->
        <test-method status="PASS" signature="login()[pri:0, instance:testNG.Para04@18a70f16]" name="login" duration-ms="0" started-at="2022-05-31T13:16:49 IST" depends-on-methods="testNG.Para04.signIn" finished-at="2022-05-31T13:16:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
      </class> <!-- testNG.Para04 -->
      <class name="testNG.Para05">
        <test-method status="PASS" signature="signIn()[pri:0, instance:testNG.Para05@62e136d3]" name="signIn" duration-ms="16" started-at="2022-05-31T13:16:49 IST" finished-at="2022-05-31T13:16:49 IST">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at testNG.Para05.signIn(Para05.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signIn -->
        <test-method status="PASS" signature="checkNotification()[pri:0, instance:testNG.Para05@62e136d3]" name="checkNotification" duration-ms="514" started-at="2022-05-31T13:16:49 IST" depends-on-methods="testNG.Para05.login" finished-at="2022-05-31T13:16:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNotification -->
        <test-method status="PASS" signature="login()[pri:0, instance:testNG.Para05@62e136d3]" name="login" duration-ms="0" started-at="2022-05-31T13:16:49 IST" depends-on-methods="testNG.Para05.signIn" finished-at="2022-05-31T13:16:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
      </class> <!-- testNG.Para05 -->
      <class name="testNG.NewTest01">
        <test-method status="PASS" signature="ram()[pri:0, instance:testNG.NewTest01@4461c7e3]" name="ram" duration-ms="16" started-at="2022-05-31T13:16:27 IST" finished-at="2022-05-31T13:16:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ram -->
      </class> <!-- testNG.NewTest01 -->
      <class name="testNG.Para06">
        <test-method status="PASS" signature="login()[pri:0, instance:testNG.Para06@c8e4bb0]" name="login" duration-ms="0" started-at="2022-05-31T13:16:50 IST" description="Checking login functionality of Actitime application" finished-at="2022-05-31T13:16:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="signin()[pri:0, instance:testNG.Para06@c8e4bb0]" name="signin" duration-ms="0" started-at="2022-05-31T13:16:50 IST" finished-at="2022-05-31T13:16:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signin -->
      </class> <!-- testNG.Para06 -->
      <class name="testNG.NewTest02">
        <test-method status="PASS" signature="test02()[pri:0, instance:testNG.NewTest02@491666ad]" name="test02" duration-ms="5012" started-at="2022-05-31T13:16:27 IST" finished-at="2022-05-31T13:16:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
      </class> <!-- testNG.NewTest02 -->
      <class name="testNG.NewTest03">
        <test-method status="PASS" signature="ab()[pri:0, instance:testNG.NewTest03@176d53b2]" name="ab" duration-ms="0" started-at="2022-05-31T13:16:32 IST" finished-at="2022-05-31T13:16:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method status="PASS" signature="abc()[pri:0, instance:testNG.NewTest03@176d53b2]" name="abc" duration-ms="2016" started-at="2022-05-31T13:16:32 IST" finished-at="2022-05-31T13:16:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abc -->
      </class> <!-- testNG.NewTest03 -->
      <class name="testNG.NewTest04">
        <test-method status="PASS" signature="tc8()[pri:0, instance:testNG.NewTest04@971d0d8]" name="tc8" duration-ms="16" started-at="2022-05-31T13:16:34 IST" finished-at="2022-05-31T13:16:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc8 -->
        <test-method status="PASS" signature="tc7()[pri:0, instance:testNG.NewTest04@971d0d8]" name="tc7" duration-ms="0" started-at="2022-05-31T13:16:34 IST" finished-at="2022-05-31T13:16:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc7 -->
      </class> <!-- testNG.NewTest04 -->
    </test> <!-- testing testNG -->
  </suite> <!-- Suite -->
</testng-results>
