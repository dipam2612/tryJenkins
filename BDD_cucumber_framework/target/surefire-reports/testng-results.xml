<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="16" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="54328" started-at="2022-05-31T09:45:51Z" finished-at="2022-05-31T09:46:45Z">
    <groups>
    </groups>
    <test name="testing testNG" duration-ms="54328" started-at="2022-05-31T09:45:51Z" finished-at="2022-05-31T09:46:45Z">
      <class name="testNG.ActiTimeV">
        <test-method status="PASS" signature="actiTimeValidation()[pri:0, instance:testNG.ActiTimeV@51931956]" name="actiTimeValidation" duration-ms="16744" started-at="2022-05-31T15:15:58Z" finished-at="2022-05-31T15:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- actiTimeValidation -->
      </class> <!-- testNG.ActiTimeV -->
      <class name="testNG.ActiTimeLogin">
        <test-method status="PASS" signature="login()[pri:0, instance:testNG.ActiTimeLogin@c8e4bb0]" name="login" duration-ms="29993" started-at="2022-05-31T15:16:15Z" finished-at="2022-05-31T15:16:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
      </class> <!-- testNG.ActiTimeLogin -->
      <class name="testNG.Para04">
        <test-method status="PASS" signature="signIn()[pri:0, instance:testNG.Para04@2b4a2ec7]" name="signIn" duration-ms="1" started-at="2022-05-31T15:16:15Z" finished-at="2022-05-31T15:16:15Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at testNG.Para04.signIn(Para04.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signIn -->
        <test-method status="PASS" signature="login()[pri:0, instance:testNG.Para04@2b4a2ec7]" name="login" duration-ms="1" started-at="2022-05-31T15:16:45Z" depends-on-methods="testNG.Para04.signIn" finished-at="2022-05-31T15:16:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkNotification()[pri:0, instance:testNG.Para04@2b4a2ec7]" name="checkNotification" duration-ms="0" started-at="2022-05-31T15:16:45Z" depends-on-methods="testNG.Para04.login" finished-at="2022-05-31T15:16:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNotification -->
      </class> <!-- testNG.Para04 -->
      <class name="testNG.NewTest01">
        <test-method status="PASS" signature="ram()[pri:0, instance:testNG.NewTest01@1b68b9a4]" name="ram" duration-ms="13" started-at="2022-05-31T15:15:51Z" finished-at="2022-05-31T15:15:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ram -->
      </class> <!-- testNG.NewTest01 -->
      <class name="testNG.Para05">
        <test-method status="PASS" signature="signIn()[pri:0, instance:testNG.Para05@51b7e5df]" name="signIn" duration-ms="1" started-at="2022-05-31T15:16:15Z" finished-at="2022-05-31T15:16:15Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at testNG.Para05.signIn(Para05.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signIn -->
        <test-method status="PASS" signature="login()[pri:0, instance:testNG.Para05@51b7e5df]" name="login" duration-ms="0" started-at="2022-05-31T15:16:45Z" depends-on-methods="testNG.Para05.signIn" finished-at="2022-05-31T15:16:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkNotification()[pri:0, instance:testNG.Para05@51b7e5df]" name="checkNotification" duration-ms="521" started-at="2022-05-31T15:16:45Z" depends-on-methods="testNG.Para05.login" finished-at="2022-05-31T15:16:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNotification -->
      </class> <!-- testNG.Para05 -->
      <class name="testNG.Para06">
        <test-method status="PASS" signature="login()[pri:0, instance:testNG.Para06@62e136d3]" name="login" duration-ms="0" started-at="2022-05-31T15:16:15Z" description="Checking login functionality of Actitime application" finished-at="2022-05-31T15:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="signin()[pri:0, instance:testNG.Para06@62e136d3]" name="signin" duration-ms="0" started-at="2022-05-31T15:16:15Z" finished-at="2022-05-31T15:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signin -->
      </class> <!-- testNG.Para06 -->
      <class name="testNG.NewTest02">
        <test-method status="PASS" signature="test02()[pri:0, instance:testNG.NewTest02@491666ad]" name="test02" duration-ms="5013" started-at="2022-05-31T15:15:51Z" finished-at="2022-05-31T15:15:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
      </class> <!-- testNG.NewTest02 -->
      <class name="testNG.NewTest03">
        <test-method status="PASS" signature="ab()[pri:0, instance:testNG.NewTest03@176d53b2]" name="ab" duration-ms="2" started-at="2022-05-31T15:15:56Z" finished-at="2022-05-31T15:15:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method status="PASS" signature="abc()[pri:0, instance:testNG.NewTest03@176d53b2]" name="abc" duration-ms="2003" started-at="2022-05-31T15:15:56Z" finished-at="2022-05-31T15:15:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abc -->
      </class> <!-- testNG.NewTest03 -->
      <class name="testNG.NewTest04">
        <test-method status="PASS" signature="tc7()[pri:0, instance:testNG.NewTest04@971d0d8]" name="tc7" duration-ms="1" started-at="2022-05-31T15:15:58Z" finished-at="2022-05-31T15:15:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc7 -->
        <test-method status="PASS" signature="tc8()[pri:0, instance:testNG.NewTest04@971d0d8]" name="tc8" duration-ms="1" started-at="2022-05-31T15:15:58Z" finished-at="2022-05-31T15:15:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc8 -->
      </class> <!-- testNG.NewTest04 -->
    </test> <!-- testing testNG -->
  </suite> <!-- Suite -->
</testng-results>
